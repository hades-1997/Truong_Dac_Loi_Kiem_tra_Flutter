{"version":3,"file":"linlak-ngxmomo.js","sources":["ng://@linlak/ngxmomo/lib/entities/base-momo-provider.ts","ng://@linlak/ngxmomo/lib/entities/momo-provider.ts","ng://@linlak/ngxmomo/lib/providers/momo-widget-privider.ts","ng://@linlak/ngxmomo/lib/data/momo-cofig.ts","ng://@linlak/ngxmomo/lib/data/momo-events.ts","ng://@linlak/ngxmomo/lib/ngxmomo.service.ts","ng://@linlak/ngxmomo/lib/components/momo-qrpayment.component.ts","ng://@linlak/ngxmomo/lib/ngxmomo.module.ts"],"sourcesContent":["import { MomoProvider, MomoProviderClass } from './momo-provider';\r\nimport {  MomoEventMain } from '../data';\r\nimport {  BehaviorSubject } from 'rxjs';\r\n\r\nexport abstract class BaseMomoProvider implements MomoProvider {\r\n    eventCallback: any;\r\n    constructor() {}\r\n    abstract TYPE: string;\r\n    abstract initialize(eventCallback: any): Promise<any>;\r\n    abstract getApiUser(): string;\r\n    abstract getCurrency(): string;\r\n    public loadScript(obj: MomoProviderClass, onload: any): void {\r\n        if (document.getElementById(obj.name)) {\r\n            return;\r\n        }\r\n\r\n        const momoJs = document.createElement('script');\r\n        momoJs.async = false;\r\n        momoJs.src = obj.url;\r\n        momoJs.onload = onload;\r\n\r\n        document.head.appendChild(momoJs);\r\n    }\r\n    public notify(eventDetails: CustomEvent): void {\r\n        this.eventCallback({\r\n            provider: this.TYPE,\r\n            event: {\r\n                type: eventDetails.type,\r\n                details: eventDetails.detail\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { BehaviorSubject } from 'rxjs';\r\nimport { MomoEventMain } from '../data';\r\n\r\nexport type MomoEnvironments = 'sandbox' | 'live';\r\nexport interface MomoProvider {\r\n    TYPE: string;\r\n    eventCallback: any;\r\n    initialize(eventCallback: any): Promise<any>;\r\n    loadScript(obj: MomoProviderClass, onload: any): void;\r\n    getApiUser(): string;\r\n    getCurrency(): string;\r\n    notify(event: CustomEvent): void;\r\n}\r\n\r\nexport interface MtnMomoConfig {\r\n    apiUserId: string;\r\n    environ?: MomoEnvironments;\r\n    url?: string;\r\n    currency?: string;\r\n}\r\n\r\nexport class MomoProviderClass {\r\n    // TYPE: string;\r\n    name: string;\r\n    url: string;\r\n    currency = 'EUR';\r\n    environ: MomoEnvironments = 'sandbox';\r\n}\r\n","import { BaseMomoProvider } from '../entities/base-momo-provider';\r\nimport { MomoProviderClass, MtnMomoConfig } from '../entities/momo-provider';\r\nimport { MomoEventMain } from '../data';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\ndeclare let mobileMoneyReinitializeWidgets: any;\r\nexport class MomoWidgetProvider extends BaseMomoProvider {\r\n    public static readonly PROVIDER_TYPE = 'mtnmomowidget';\r\n    public TYPE = 'mtnmomowidget';\r\n    private momoConfig: MtnMomoConfig;\r\n\r\n    public momoProviderObj: MomoProviderClass = new MomoProviderClass();\r\n\r\n    constructor(config: MtnMomoConfig) {\r\n        super();\r\n        this.momoConfig =  config;\r\n        this.momoProviderObj.name = 'mtnmomowidget';\r\n        this.momoProviderObj.url = config.url || 'https://widget.northeurope.cloudapp.azure.com:9443/v0.1.0/mobile-money-widget-mtn.js';\r\n    }\r\n\r\n    public initialize(eventCallback: any): Promise<any> {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.loadScript(this.momoProviderObj, () => {\r\n                this.eventCallback = eventCallback;\r\n                window.addEventListener('mobile-money-qr-payment-created', (e: CustomEvent) => this.notify(e));\r\n                window.addEventListener('mobile-money-qr-payment-canceled', (e: CustomEvent) => this.notify(e));\r\n                window.addEventListener('mobile-money-qr-payment-successful', (e: CustomEvent) => this.notify(e));\r\n                window.addEventListener('mobile-money-qr-payment-failed', (e: CustomEvent) => this.notify( e));\r\n\r\n                mobileMoneyReinitializeWidgets();\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n     public getApiUser(): string {\r\n     return this.momoConfig.apiUserId;\r\n   }\r\n   public getCurrency(): string {\r\n     return this.momoConfig.currency;\r\n   }\r\n}\r\n","import { MomoProvider, MtnMomoConfig } from '../entities/momo-provider';\nimport { MomoWidgetProvider } from '../providers/momo-widget-privider';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { MomoEvent } from './momo-events';\n\nexport interface NgxMomoServiceConfigItem {\n    provider: MomoProvider;\n}\nexport class NgxMomoServiceConfig {\n    private providers: Map<string, MomoProvider> = new Map<string, MomoProvider>();\n    constructor(providers?: NgxMomoServiceConfigItem[]) {\n\n        if (providers) {\n            // tslint:disable-next-line: prefer-for-of\n            for (let i = 0; i < providers.length; i++) {\n                const element = providers[i];\n                this.providers.set(element.provider.TYPE, element.provider);\n            }\n        }\n    }\n    getProviders() {\n        return this.providers;\n    }\n    private addProvider(provider: MomoProvider) {\n        if (!this.providers.get(provider.TYPE)) {\n            this.providers.set(provider.TYPE, provider);\n        }\n    }\n\n    public addMomoWidgetProvider(config: MtnMomoConfig) {\n        this.addProvider(new MomoWidgetProvider(config));\n        return this;\n    }\n}\n","export interface MomoEvent {\r\n    type: string;\r\n    details: any;\r\n}\r\n\r\nexport interface MomoEventMain {\r\n    provider: string;\r\n    event: MomoEvent;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { NgxMomoServiceConfig, MomoEvent, MomoEventMain } from './data';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { MomoProvider } from './entities/momo-provider';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxMomoService {\n  private providers: Map<string, MomoProvider>;\n  public eventListener: BehaviorSubject<any> = new BehaviorSubject<any>(false);\n\n    public listen(): Observable<MomoEventMain|any> {\n        return this.eventListener.asObservable();\n    }\n\n    private eventCallback(momoEvent: MomoEventMain): void {\n      this.notifyEvt(momoEvent);\n    }\n  constructor(config: NgxMomoServiceConfig, private http: HttpClient) {\n    this.providers = config.getProviders();\n    this.providers.forEach((provider: MomoProvider, key: string) => {\n      provider.initialize(this.eventCallback.bind(this)).then(r => {\n      })\n      .catch(error => {\n      });\n    });\n   }\n\n   public getProvider(tagName: string) {\n     return this.providers.get(tagName);\n   }\n\n  private notifyEvt(evt: MomoEventMain): void {\n     this.eventListener.next(evt);\n   }\n}\n","import { OnInit, OnDestroy, Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { NgxMomoService } from '../ngxmomo.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { MomoProvider } from '../entities/momo-provider';\r\nimport { MomoWidgetProvider } from '../providers/momo-widget-privider';\r\nimport { MomoEvent } from '../data';\r\n\r\n@Component({\r\n    selector: 'momo-qrpayment',\r\n    template: `\r\n        <div>\r\n            <div\r\n                class=\"mobile-money-qr-payment\"\r\n                [attr.data-api-user-id]=\"apiUserId\"\r\n                [attr.data-amount]=\"amount\"\r\n                [attr.data-currency]=\"currency\"\r\n                [attr.data-external-id]=\"externalId\"\r\n            >\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: []\r\n})\r\n\r\nexport class MomoQrpaymentComponent implements OnInit, OnDestroy {\r\n    @Input() externalId?: string;\r\n    @Input() amount?: number;\r\n    private momoProvider: MomoProvider| null;\r\n    apiUserId: string;\r\n    currency: string;\r\n    constructor(public momo: NgxMomoService) {\r\n        this.momoProvider = this.momo.getProvider('mtnmomowidget');\r\n        if ( !this.momoProvider && !(this.momoProvider instanceof MomoWidgetProvider)) {\r\n            throw new Error(`${MomoWidgetProvider.PROVIDER_TYPE} was not initialized`);\r\n        }\r\n        this.apiUserId = this.momoProvider.getApiUser();\r\n        this.currency = this.momoProvider.getCurrency();\r\n    }\r\n    ngOnInit() {\r\n    }\r\n    ngOnDestroy() {\r\n    }\r\n}\r\n","import { NgModule, ModuleWithProviders, Optional, SkipSelf } from '@angular/core';\nimport { NgxMomoServiceConfig } from './data';\nimport { NgxMomoService } from './ngxmomo.service';\nimport { MomoQrpaymentComponent } from './components/momo-qrpayment.component';\n\n\n\n@NgModule({\n  declarations: [\n    MomoQrpaymentComponent,\n  ],\n  imports: [\n  ],\n  exports: [\n    MomoQrpaymentComponent,\n  ]\n})\nexport class NgxMomoModule {\n  private static alreadCalled = false;\n  constructor(@Optional() @SkipSelf() parentModule?: NgxMomoModule) {\n    if (parentModule) {\n        NgxMomoModule.alreadCalled = true;\n      }\n  }\n\n  /**\n   * the forRoot function is used to initialize the momo library in the root module i.e AppModule\n   * const momoConfig = new NgxMomoServiceConfig();\n   *\n   * import: [\n   *  .............\n   *  NgxMomoModule.forRoot(momoConfig),\n   *  ..............\n   * ]\n   *\n   */\n\n  static forRoot(config: NgxMomoServiceConfig): ModuleWithProviders {\n    if (NgxMomoModule.alreadCalled) {\n      return;\n    }\n    return {\n      ngModule: NgxMomoModule,\n      providers: [\n        NgxMomoService,\n        {\n          provide: NgxMomoServiceConfig,\n          useValue: config\n        }\n      ]\n    };\n  }\n\n\n }\n"],"names":["tslib_1.__extends"],"mappings":"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"}