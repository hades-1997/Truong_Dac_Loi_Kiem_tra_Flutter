/**
 * @fileoverview added by tsickle
 * Generated from: lib/ngxmomo.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { NgxMomoServiceConfig } from './data';
import { HttpClient } from '@angular/common/http';
import { BehaviorSubject } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "./data/momo-cofig";
import * as i2 from "@angular/common/http";
var NgxMomoService = /** @class */ (function () {
    function NgxMomoService(config, http) {
        var _this = this;
        this.http = http;
        this.eventListener = new BehaviorSubject(false);
        this.providers = config.getProviders();
        this.providers.forEach((/**
         * @param {?} provider
         * @param {?} key
         * @return {?}
         */
        function (provider, key) {
            provider.initialize(_this.eventCallback.bind(_this)).then((/**
             * @param {?} r
             * @return {?}
             */
            function (r) {
            }))
                .catch((/**
             * @param {?} error
             * @return {?}
             */
            function (error) {
            }));
        }));
    }
    /**
     * @return {?}
     */
    NgxMomoService.prototype.listen = /**
     * @return {?}
     */
    function () {
        return this.eventListener.asObservable();
    };
    /**
     * @private
     * @param {?} momoEvent
     * @return {?}
     */
    NgxMomoService.prototype.eventCallback = /**
     * @private
     * @param {?} momoEvent
     * @return {?}
     */
    function (momoEvent) {
        this.notifyEvt(momoEvent);
    };
    /**
     * @param {?} tagName
     * @return {?}
     */
    NgxMomoService.prototype.getProvider = /**
     * @param {?} tagName
     * @return {?}
     */
    function (tagName) {
        return this.providers.get(tagName);
    };
    /**
     * @private
     * @param {?} evt
     * @return {?}
     */
    NgxMomoService.prototype.notifyEvt = /**
     * @private
     * @param {?} evt
     * @return {?}
     */
    function (evt) {
        this.eventListener.next(evt);
    };
    NgxMomoService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    NgxMomoService.ctorParameters = function () { return [
        { type: NgxMomoServiceConfig },
        { type: HttpClient }
    ]; };
    /** @nocollapse */ NgxMomoService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function NgxMomoService_Factory() { return new NgxMomoService(i0.ɵɵinject(i1.NgxMomoServiceConfig), i0.ɵɵinject(i2.HttpClient)); }, token: NgxMomoService, providedIn: "root" });
    return NgxMomoService;
}());
export { NgxMomoService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NgxMomoService.prototype.providers;
    /** @type {?} */
    NgxMomoService.prototype.eventListener;
    /**
     * @type {?}
     * @private
     */
    NgxMomoService.prototype.http;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4bW9tby5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGxpbmxhay9uZ3htb21vLyIsInNvdXJjZXMiOlsibGliL25neG1vbW8uc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLG9CQUFvQixFQUE0QixNQUFNLFFBQVEsQ0FBQztBQUN4RSxPQUFPLEVBQUUsVUFBVSxFQUFlLE1BQU0sc0JBQXNCLENBQUM7QUFDL0QsT0FBTyxFQUFjLGVBQWUsRUFBRSxNQUFNLE1BQU0sQ0FBQzs7OztBQUduRDtJQWNFLHdCQUFZLE1BQTRCLEVBQVUsSUFBZ0I7UUFBbEUsaUJBUUU7UUFSZ0QsU0FBSSxHQUFKLElBQUksQ0FBWTtRQVQzRCxrQkFBYSxHQUF5QixJQUFJLGVBQWUsQ0FBTSxLQUFLLENBQUMsQ0FBQztRQVUzRSxJQUFJLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUN2QyxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU87Ozs7O1FBQUMsVUFBQyxRQUFzQixFQUFFLEdBQVc7WUFDekQsUUFBUSxDQUFDLFVBQVUsQ0FBQyxLQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxLQUFJLENBQUMsQ0FBQyxDQUFDLElBQUk7Ozs7WUFBQyxVQUFBLENBQUM7WUFDekQsQ0FBQyxFQUFDO2lCQUNELEtBQUs7Ozs7WUFBQyxVQUFBLEtBQUs7WUFDWixDQUFDLEVBQUMsQ0FBQztRQUNMLENBQUMsRUFBQyxDQUFDO0lBQ0osQ0FBQzs7OztJQWZPLCtCQUFNOzs7SUFBYjtRQUNJLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUM3QyxDQUFDOzs7Ozs7SUFFTyxzQ0FBYTs7Ozs7SUFBckIsVUFBc0IsU0FBd0I7UUFDNUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUM1QixDQUFDOzs7OztJQVdLLG9DQUFXOzs7O0lBQWxCLFVBQW1CLE9BQWU7UUFDaEMsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNyQyxDQUFDOzs7Ozs7SUFFTSxrQ0FBUzs7Ozs7SUFBakIsVUFBa0IsR0FBa0I7UUFDakMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDL0IsQ0FBQzs7Z0JBOUJILFVBQVUsU0FBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkI7Ozs7Z0JBUFEsb0JBQW9CO2dCQUNwQixVQUFVOzs7eUJBRm5CO0NBcUNDLEFBL0JELElBK0JDO1NBNUJZLGNBQWM7Ozs7OztJQUN6QixtQ0FBNkM7O0lBQzdDLHVDQUE2RTs7Ozs7SUFTbkMsOEJBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmd4TW9tb1NlcnZpY2VDb25maWcsIE1vbW9FdmVudCwgTW9tb0V2ZW50TWFpbiB9IGZyb20gJy4vZGF0YSc7XG5pbXBvcnQgeyBIdHRwQ2xpZW50LCBIdHRwSGVhZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IE9ic2VydmFibGUsIEJlaGF2aW9yU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgTW9tb1Byb3ZpZGVyIH0gZnJvbSAnLi9lbnRpdGllcy9tb21vLXByb3ZpZGVyJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgTmd4TW9tb1NlcnZpY2Uge1xuICBwcml2YXRlIHByb3ZpZGVyczogTWFwPHN0cmluZywgTW9tb1Byb3ZpZGVyPjtcbiAgcHVibGljIGV2ZW50TGlzdGVuZXI6IEJlaGF2aW9yU3ViamVjdDxhbnk+ID0gbmV3IEJlaGF2aW9yU3ViamVjdDxhbnk+KGZhbHNlKTtcblxuICAgIHB1YmxpYyBsaXN0ZW4oKTogT2JzZXJ2YWJsZTxNb21vRXZlbnRNYWlufGFueT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5ldmVudExpc3RlbmVyLmFzT2JzZXJ2YWJsZSgpO1xuICAgIH1cblxuICAgIHByaXZhdGUgZXZlbnRDYWxsYmFjayhtb21vRXZlbnQ6IE1vbW9FdmVudE1haW4pOiB2b2lkIHtcbiAgICAgIHRoaXMubm90aWZ5RXZ0KG1vbW9FdmVudCk7XG4gICAgfVxuICBjb25zdHJ1Y3Rvcihjb25maWc6IE5neE1vbW9TZXJ2aWNlQ29uZmlnLCBwcml2YXRlIGh0dHA6IEh0dHBDbGllbnQpIHtcbiAgICB0aGlzLnByb3ZpZGVycyA9IGNvbmZpZy5nZXRQcm92aWRlcnMoKTtcbiAgICB0aGlzLnByb3ZpZGVycy5mb3JFYWNoKChwcm92aWRlcjogTW9tb1Byb3ZpZGVyLCBrZXk6IHN0cmluZykgPT4ge1xuICAgICAgcHJvdmlkZXIuaW5pdGlhbGl6ZSh0aGlzLmV2ZW50Q2FsbGJhY2suYmluZCh0aGlzKSkudGhlbihyID0+IHtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgfSk7XG4gICAgfSk7XG4gICB9XG5cbiAgIHB1YmxpYyBnZXRQcm92aWRlcih0YWdOYW1lOiBzdHJpbmcpIHtcbiAgICAgcmV0dXJuIHRoaXMucHJvdmlkZXJzLmdldCh0YWdOYW1lKTtcbiAgIH1cblxuICBwcml2YXRlIG5vdGlmeUV2dChldnQ6IE1vbW9FdmVudE1haW4pOiB2b2lkIHtcbiAgICAgdGhpcy5ldmVudExpc3RlbmVyLm5leHQoZXZ0KTtcbiAgIH1cbn1cbiJdfQ==