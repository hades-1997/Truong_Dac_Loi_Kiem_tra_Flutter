/**
 * @fileoverview added by tsickle
 * Generated from: lib/data/momo-cofig.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { MomoWidgetProvider } from '../providers/momo-widget-privider';
/**
 * @record
 */
export function NgxMomoServiceConfigItem() { }
if (false) {
    /** @type {?} */
    NgxMomoServiceConfigItem.prototype.provider;
}
export class NgxMomoServiceConfig {
    /**
     * @param {?=} providers
     */
    constructor(providers) {
        this.providers = new Map();
        if (providers) {
            // tslint:disable-next-line: prefer-for-of
            for (let i = 0; i < providers.length; i++) {
                /** @type {?} */
                const element = providers[i];
                this.providers.set(element.provider.TYPE, element.provider);
            }
        }
    }
    /**
     * @return {?}
     */
    getProviders() {
        return this.providers;
    }
    /**
     * @private
     * @param {?} provider
     * @return {?}
     */
    addProvider(provider) {
        if (!this.providers.get(provider.TYPE)) {
            this.providers.set(provider.TYPE, provider);
        }
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} config
     * @return {THIS}
     */
    addMomoWidgetProvider(config) {
        (/** @type {?} */ (this)).addProvider(new MomoWidgetProvider(config));
        return (/** @type {?} */ (this));
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    NgxMomoServiceConfig.prototype.providers;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9tby1jb2ZpZy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BsaW5sYWsvbmd4bW9tby8iLCJzb3VyY2VzIjpbImxpYi9kYXRhL21vbW8tY29maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQzs7OztBQUl2RSw4Q0FFQzs7O0lBREcsNENBQXVCOztBQUUzQixNQUFNLE9BQU8sb0JBQW9COzs7O0lBRTdCLFlBQVksU0FBc0M7UUFEMUMsY0FBUyxHQUE4QixJQUFJLEdBQUcsRUFBd0IsQ0FBQztRQUczRSxJQUFJLFNBQVMsRUFBRTtZQUNYLDBDQUEwQztZQUMxQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsU0FBUyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTs7c0JBQ2pDLE9BQU8sR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDO2dCQUM1QixJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7YUFDL0Q7U0FDSjtJQUNMLENBQUM7Ozs7SUFDRCxZQUFZO1FBQ1IsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQzFCLENBQUM7Ozs7OztJQUNPLFdBQVcsQ0FBQyxRQUFzQjtRQUN0QyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ3BDLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7U0FDL0M7SUFDTCxDQUFDOzs7Ozs7O0lBRU0scUJBQXFCLENBQUMsTUFBcUI7UUFDOUMsbUJBQUEsSUFBSSxFQUFBLENBQUMsV0FBVyxDQUFDLElBQUksa0JBQWtCLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUNqRCxPQUFPLG1CQUFBLElBQUksRUFBQSxDQUFDO0lBQ2hCLENBQUM7Q0FDSjs7Ozs7O0lBeEJHLHlDQUErRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vbW9Qcm92aWRlciwgTXRuTW9tb0NvbmZpZyB9IGZyb20gJy4uL2VudGl0aWVzL21vbW8tcHJvdmlkZXInO1xuaW1wb3J0IHsgTW9tb1dpZGdldFByb3ZpZGVyIH0gZnJvbSAnLi4vcHJvdmlkZXJzL21vbW8td2lkZ2V0LXByaXZpZGVyJztcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgTW9tb0V2ZW50IH0gZnJvbSAnLi9tb21vLWV2ZW50cyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmd4TW9tb1NlcnZpY2VDb25maWdJdGVtIHtcbiAgICBwcm92aWRlcjogTW9tb1Byb3ZpZGVyO1xufVxuZXhwb3J0IGNsYXNzIE5neE1vbW9TZXJ2aWNlQ29uZmlnIHtcbiAgICBwcml2YXRlIHByb3ZpZGVyczogTWFwPHN0cmluZywgTW9tb1Byb3ZpZGVyPiA9IG5ldyBNYXA8c3RyaW5nLCBNb21vUHJvdmlkZXI+KCk7XG4gICAgY29uc3RydWN0b3IocHJvdmlkZXJzPzogTmd4TW9tb1NlcnZpY2VDb25maWdJdGVtW10pIHtcblxuICAgICAgICBpZiAocHJvdmlkZXJzKSB7XG4gICAgICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IHByZWZlci1mb3Itb2ZcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcHJvdmlkZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IHByb3ZpZGVyc1tpXTtcbiAgICAgICAgICAgICAgICB0aGlzLnByb3ZpZGVycy5zZXQoZWxlbWVudC5wcm92aWRlci5UWVBFLCBlbGVtZW50LnByb3ZpZGVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXRQcm92aWRlcnMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb3ZpZGVycztcbiAgICB9XG4gICAgcHJpdmF0ZSBhZGRQcm92aWRlcihwcm92aWRlcjogTW9tb1Byb3ZpZGVyKSB7XG4gICAgICAgIGlmICghdGhpcy5wcm92aWRlcnMuZ2V0KHByb3ZpZGVyLlRZUEUpKSB7XG4gICAgICAgICAgICB0aGlzLnByb3ZpZGVycy5zZXQocHJvdmlkZXIuVFlQRSwgcHJvdmlkZXIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIGFkZE1vbW9XaWRnZXRQcm92aWRlcihjb25maWc6IE10bk1vbW9Db25maWcpIHtcbiAgICAgICAgdGhpcy5hZGRQcm92aWRlcihuZXcgTW9tb1dpZGdldFByb3ZpZGVyKGNvbmZpZykpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59XG4iXX0=