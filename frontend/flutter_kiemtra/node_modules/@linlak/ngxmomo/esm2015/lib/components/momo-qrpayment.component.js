/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/momo-qrpayment.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { NgxMomoService } from '../ngxmomo.service';
import { MomoWidgetProvider } from '../providers/momo-widget-privider';
export class MomoQrpaymentComponent {
    /**
     * @param {?} momo
     */
    constructor(momo) {
        this.momo = momo;
        this.momoProvider = this.momo.getProvider('mtnmomowidget');
        if (!this.momoProvider && !(this.momoProvider instanceof MomoWidgetProvider)) {
            throw new Error(`${MomoWidgetProvider.PROVIDER_TYPE} was not initialized`);
        }
        this.apiUserId = this.momoProvider.getApiUser();
        this.currency = this.momoProvider.getCurrency();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
    }
}
MomoQrpaymentComponent.decorators = [
    { type: Component, args: [{
                selector: 'momo-qrpayment',
                template: `
        <div>
            <div
                class="mobile-money-qr-payment"
                [attr.data-api-user-id]="apiUserId"
                [attr.data-amount]="amount"
                [attr.data-currency]="currency"
                [attr.data-external-id]="externalId"
            >
            </div>
        </div>
    `
            }] }
];
/** @nocollapse */
MomoQrpaymentComponent.ctorParameters = () => [
    { type: NgxMomoService }
];
MomoQrpaymentComponent.propDecorators = {
    externalId: [{ type: Input }],
    amount: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    MomoQrpaymentComponent.prototype.externalId;
    /** @type {?} */
    MomoQrpaymentComponent.prototype.amount;
    /**
     * @type {?}
     * @private
     */
    MomoQrpaymentComponent.prototype.momoProvider;
    /** @type {?} */
    MomoQrpaymentComponent.prototype.apiUserId;
    /** @type {?} */
    MomoQrpaymentComponent.prototype.currency;
    /** @type {?} */
    MomoQrpaymentComponent.prototype.momo;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9tby1xcnBheW1lbnQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGxpbmxhay9uZ3htb21vLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvbW9tby1xcnBheW1lbnQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFxQixTQUFTLEVBQUUsS0FBSyxFQUF3QixNQUFNLGVBQWUsQ0FBQztBQUMxRixPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFHcEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFvQnZFLE1BQU0sT0FBTyxzQkFBc0I7Ozs7SUFNL0IsWUFBbUIsSUFBb0I7UUFBcEIsU0FBSSxHQUFKLElBQUksQ0FBZ0I7UUFDbkMsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUMzRCxJQUFLLENBQUMsSUFBSSxDQUFDLFlBQVksSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksWUFBWSxrQkFBa0IsQ0FBQyxFQUFFO1lBQzNFLE1BQU0sSUFBSSxLQUFLLENBQUMsR0FBRyxrQkFBa0IsQ0FBQyxhQUFhLHNCQUFzQixDQUFDLENBQUM7U0FDOUU7UUFDRCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDaEQsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3BELENBQUM7Ozs7SUFDRCxRQUFRO0lBQ1IsQ0FBQzs7OztJQUNELFdBQVc7SUFDWCxDQUFDOzs7WUFsQ0osU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxnQkFBZ0I7Z0JBQzFCLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7S0FXVDthQUVKOzs7O1lBckJRLGNBQWM7Ozt5QkF3QmxCLEtBQUs7cUJBQ0wsS0FBSzs7OztJQUROLDRDQUE2Qjs7SUFDN0Isd0NBQXlCOzs7OztJQUN6Qiw4Q0FBeUM7O0lBQ3pDLDJDQUFrQjs7SUFDbEIsMENBQWlCOztJQUNMLHNDQUEyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCwgT25EZXN0cm95LCBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOZ3hNb21vU2VydmljZSB9IGZyb20gJy4uL25neG1vbW8uc2VydmljZSc7XHJcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBNb21vUHJvdmlkZXIgfSBmcm9tICcuLi9lbnRpdGllcy9tb21vLXByb3ZpZGVyJztcclxuaW1wb3J0IHsgTW9tb1dpZGdldFByb3ZpZGVyIH0gZnJvbSAnLi4vcHJvdmlkZXJzL21vbW8td2lkZ2V0LXByaXZpZGVyJztcclxuaW1wb3J0IHsgTW9tb0V2ZW50IH0gZnJvbSAnLi4vZGF0YSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAnbW9tby1xcnBheW1lbnQnLFxyXG4gICAgdGVtcGxhdGU6IGBcclxuICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgICAgICBjbGFzcz1cIm1vYmlsZS1tb25leS1xci1wYXltZW50XCJcclxuICAgICAgICAgICAgICAgIFthdHRyLmRhdGEtYXBpLXVzZXItaWRdPVwiYXBpVXNlcklkXCJcclxuICAgICAgICAgICAgICAgIFthdHRyLmRhdGEtYW1vdW50XT1cImFtb3VudFwiXHJcbiAgICAgICAgICAgICAgICBbYXR0ci5kYXRhLWN1cnJlbmN5XT1cImN1cnJlbmN5XCJcclxuICAgICAgICAgICAgICAgIFthdHRyLmRhdGEtZXh0ZXJuYWwtaWRdPVwiZXh0ZXJuYWxJZFwiXHJcbiAgICAgICAgICAgID5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICBgLFxyXG4gICAgc3R5bGVzOiBbXVxyXG59KVxyXG5cclxuZXhwb3J0IGNsYXNzIE1vbW9RcnBheW1lbnRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgICBASW5wdXQoKSBleHRlcm5hbElkPzogc3RyaW5nO1xyXG4gICAgQElucHV0KCkgYW1vdW50PzogbnVtYmVyO1xyXG4gICAgcHJpdmF0ZSBtb21vUHJvdmlkZXI6IE1vbW9Qcm92aWRlcnwgbnVsbDtcclxuICAgIGFwaVVzZXJJZDogc3RyaW5nO1xyXG4gICAgY3VycmVuY3k6IHN0cmluZztcclxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBtb21vOiBOZ3hNb21vU2VydmljZSkge1xyXG4gICAgICAgIHRoaXMubW9tb1Byb3ZpZGVyID0gdGhpcy5tb21vLmdldFByb3ZpZGVyKCdtdG5tb21vd2lkZ2V0Jyk7XHJcbiAgICAgICAgaWYgKCAhdGhpcy5tb21vUHJvdmlkZXIgJiYgISh0aGlzLm1vbW9Qcm92aWRlciBpbnN0YW5jZW9mIE1vbW9XaWRnZXRQcm92aWRlcikpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke01vbW9XaWRnZXRQcm92aWRlci5QUk9WSURFUl9UWVBFfSB3YXMgbm90IGluaXRpYWxpemVkYCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuYXBpVXNlcklkID0gdGhpcy5tb21vUHJvdmlkZXIuZ2V0QXBpVXNlcigpO1xyXG4gICAgICAgIHRoaXMuY3VycmVuY3kgPSB0aGlzLm1vbW9Qcm92aWRlci5nZXRDdXJyZW5jeSgpO1xyXG4gICAgfVxyXG4gICAgbmdPbkluaXQoKSB7XHJcbiAgICB9XHJcbiAgICBuZ09uRGVzdHJveSgpIHtcclxuICAgIH1cclxufVxyXG4iXX0=